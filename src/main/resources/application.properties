#JPA 配置
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto =none
spring.jpa.open-in-view=false
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#-----------------------------------------------------------------
#数据库设置
spring.datasource.url=jdbc:mysql://118.25.17.127:3306/joker?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=1
spring.datasource.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=false
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#-------------------------------------------------------------------------------------------------
spring.datasource.initialization-mode=never
spring.datasource.schema=classpath:database/schema-mysql.sql
spring.datasource.data=classpath:database/data-mysql.sql
spring.datasource.sql-script-encoding=utf-8
server.port=80
#oauth2
oauth2.init.sysadmin=Sysadmin
oauth2.init.password=admin
oauth2.jwt.jwtSigningKey = opt
oauth2.jwt.clients[0].clientId = fotaui
oauth2.jwt.clients[0].clientSecret = fotauisecret
oauth2.jwt.clients[0].accessTokenValidateSeconds = 2592000
oauth2.jwt.clients[0].accessTokenRefreshSeconds = 2592000
oauth2.jwt.clients[1].clientId = test
oauth2.jwt.clients[1].clientSecret = test
oauth2.jwt.clients[1].accessTokenValidateSeconds = 7200
oauth2.jwt.clients[1].accessTokenRefreshSeconds = 7200
oauth2.jwt.tokenStore = jwt
oauth2.cross = true